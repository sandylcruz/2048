{"version":3,"sources":["components/Tile.js","actions/boardActions.js","components/Board.js","reducers/selectors.js","components/Modal.js","components/Game.js","GlobalStyle.js","components/Themes.js","components/Toggle.js","components/App.js","reducers/boardReducer.js","reducers/rootReducer.js","components/store.js","index.js"],"names":["StyledContent","styled","div","StyledTile","motion","value","theme","tiles","getColor","top","left","Tile","React","memo","grid","id","position","Math","floor","layoutId","initial","visibility","opacity","ADD_TILE","MOVE_DOWN","MOVE_LEFT","MOVE_RIGHT","MOVE_UP","RESTART_GAME","addTile","type","moveLeft","restartGame","BoardContainer","Div","Board","dispatch","useDispatch","useEffect","handleKeyDown","event","key","batch","window","addEventListener","removeEventListener","AnimateSharedLayout","map","tile","selectGrid","createSelector","state","board","reduce","accumulator","row","i","forEach","j","push","selectPoints","score","selectCurrentGameState","some","maxSize","filter","getNeighborCoordinates","length","coordinate","x","y","RestartButton","button","StyledBody","body","StyledFooter","Footer","Modal","text","useSelector","textAlign","onClick","restartGameAction","Game","gameState","shouldShowModal","GlobalStyle","createGlobalStyle","gradient","lightTheme","h1","toggleBorder","color","0","2","4","8","16","32","64","128","256","512","1024","2048","darkTheme","background","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","Toggle","onChange","htmlFor","AboveGame","BodyDiv","Container","HeaderDiv","ScoreContainer","StyledGame","StyledH1","StyledH3","h3","StyledH4","h4","TextDiv","TitleContainer","ToggleDiv","UnderGame","App","useState","setTheme","randomNumber","random","generateNewBoard","newBoard","generateRandomCoordinate","coordinateOne","coordinateTwo","number","oldTile","initialState","bestScore","tiltGridDown","nextGrid","nextRow","n","points","oldRow","isEqual","tiltGridUp","tiltRowLeft","hasSwapped","temp","tiltRowRight","boardReducer","action","newPoints","index","emptyCoordinates","item","randomEmptyCoordinateIndex","randomEmptyCoordinate","previousTile","tileObject","acc","newRow","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","enhancers","__REDUX_DEVTOOLS_EXTENSION__","composeEnhancer","compose","store","createStore","persistor","persistStore","ReactDOM","render","DEFAULT_THEME","loading","document","getElementById"],"mappings":"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","file":"static/js/main.56b88787.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { motion } from \"framer-motion\";\n\nconst StyledContent = styled.div`\n  font-size: 40px;\n  margin-top: 25px;\n  opacity: 1 !important;\n`;\n\nconst getColor = (theme, value) => {\n  return theme.tiles[value];\n};\n\nconst StyledTile = styled(motion.div)`\n  border: 5px solid #4a4e69;\n  display: block;\n  background-color: ${({ value, theme }) => getColor(theme, value)};\n  width: 100px;\n  height: 100px;\n  text-align: center;\n  position: absolute;\n  border-radius: 6px;\n\n  top: ${({ top }) => `${top}px`};\n  left: ${({ left }) => `${left}px`};\n`;\n\nconst Tile = React.memo(({ grid, id, value, position }) => {\n  const top = Math.floor(position / 4) * 100;\n  const left = Math.floor(position % 4) * 100;\n\n  return (\n    <StyledTile\n      value={value}\n      layoutId={`tile-${id}`}\n      initial={{ visibility: \"visible\", opacity: 1 }}\n      top={top}\n      left={left}\n    >\n      {value !== 0 && (\n        <StyledContent>{value === 0 ? null : value}</StyledContent>\n      )}\n    </StyledTile>\n  );\n});\n\nexport default Tile;\n","export const ADD_TILE = \"ADD_TILE\";\nexport const MOVE_DOWN = \"MOVE_DOWN\";\nexport const MOVE_LEFT = \"MOVE_LEFT\";\nexport const MOVE_RIGHT = \"MOVE_RIGHT\";\nexport const MOVE_UP = \"MOVE_UP\";\nexport const RESTART_GAME = \"RESTART_GAME\";\n\nexport const addTile = () => ({\n  type: ADD_TILE,\n});\n\nexport const moveLeft = () => ({\n  type: MOVE_LEFT,\n});\n\nexport const moveRight = () => ({\n  type: MOVE_RIGHT,\n});\n\nexport const moveUp = () => ({\n  type: MOVE_UP,\n});\n\nexport const moveDown = () => ({\n  type: MOVE_DOWN,\n});\n\nexport const restartGame = () => ({\n  type: RESTART_GAME,\n});\n","import React, { useEffect } from \"react\";\nimport { batch, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { AnimateSharedLayout } from \"framer-motion\";\n\nimport Tile from \"./Tile\";\nimport {\n  addTile,\n  moveUp,\n  moveDown,\n  moveLeft,\n  moveRight,\n} from \"../actions/boardActions\";\n\nconst BoardContainer = styled.div`\n  position: absolute;\n  border-radius: 10px;\n`;\n\nconst Div = styled.div`\n  height: 410px;\n  width: 410px;\n  box-shadow: 0px 0px 10px 2px grey;\n  border-radius: 10px;\n`;\n\nconst Board = React.memo(({ grid }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      switch (event.key) {\n        case \"ArrowUp\": {\n          batch(() => {\n            dispatch(moveUp());\n            dispatch(addTile());\n          });\n          break;\n        }\n        case \"ArrowDown\": {\n          batch(() => {\n            dispatch(moveDown());\n            dispatch(addTile());\n          });\n          break;\n        }\n        case \"ArrowLeft\": {\n          batch(() => {\n            dispatch(moveLeft());\n            dispatch(addTile());\n          });\n          break;\n        }\n        case \"ArrowRight\": {\n          batch(() => {\n            dispatch(moveRight());\n            dispatch(addTile());\n          });\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [dispatch]);\n\n  return (\n    <AnimateSharedLayout>\n      <Div>\n        <BoardContainer>\n          {grid.map((tile) => (\n            <Tile\n              id={tile.id}\n              key={tile.id}\n              position={tile.position}\n              value={tile.value}\n              grid={grid}\n            />\n          ))}\n        </BoardContainer>\n      </Div>\n    </AnimateSharedLayout>\n  );\n});\n\nexport default Board;\n","import { createSelector } from \"reselect\";\n\nexport const selectGrid = createSelector(\n  (state) => state.board.grid,\n  (grid) =>\n    grid.reduce((accumulator, row, i) => {\n      row.forEach((tile, j) => {\n        const position = i * 4 + j;\n        accumulator.push({ value: tile.value, position, id: tile.id });\n      });\n\n      return accumulator;\n    }, [])\n);\n\nexport const selectPoints = createSelector(\n  (state) => state.board.score,\n  (score) => score\n);\n\nconst getNeighborCoordinates = ([i, j], maxSize) => {\n  const naiveNeighbors = [\n    [i - 1, j],\n    [i + 1, j],\n    [i, j - 1],\n    [i, j + 1],\n  ];\n\n  return naiveNeighbors.filter(\n    ([i, j]) => i >= 0 && j >= 0 && i < maxSize && j < maxSize\n  );\n};\n\nexport const selectCurrentGameState = createSelector(\n  (state) => state.board.grid,\n  (grid) => {\n    const isWon = grid.some((row) => {\n      return row.some((tile) => tile.value === 2048);\n    });\n\n    if (isWon) return \"won\";\n\n    const hasEmptyTile = grid.some((row) => {\n      return row.some((tile) => tile.value === 0);\n    });\n\n    if (hasEmptyTile) return \"active\";\n\n    const hasMovesLeft = grid.some((row, i) => {\n      return row.some((tile, j) => {\n        const neighborCoordinates = getNeighborCoordinates([i, j], grid.length);\n\n        return neighborCoordinates.some((coordinate) => {\n          const [x, y] = coordinate;\n          const neighborValue = grid[x][y].value;\n\n          return neighborValue === tile.value;\n        });\n      });\n    });\n\n    // const hasMovesLeft = grid.some((row, i) => {\n    //   return row.some((tile, j) => {\n    //     const neighborCoordinates = getNeighborCoordinates([i, j], grid.length);\n\n    //     return neighborCoordinates.some((coordinate) => {\n    //       const [x, y] = coordinate;\n    //       const neighborValue = grid[x][y].value;\n\n    //       return neighborValue === tile.value;\n    //     });\n    //   });\n    // });\n\n    return hasMovesLeft ? \"active\" : \"lost\";\n  }\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { restartGame as restartGameAction } from \"../actions/boardActions\";\nimport {\n  Modal as ZendeskModal,\n  Footer,\n  FooterItem,\n} from \"@zendeskgarden/react-modals\";\nimport { Row, Col } from \"@zendeskgarden/react-grid\";\nimport styled from \"styled-components\";\nimport { selectCurrentGameState } from \"../reducers/selectors\";\n\nconst RestartButton = styled.button`\n  background-color: rgb(204, 51, 64);\n  text-decoration: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-weight: bolder;\n  color: white;\n  height: 40px;\n  outline: none;\n  box-shadow: none;\n\n  &:hover {\n    background-color: #8c232c;\n    transition: border-color 0.25s ease-in-out 0s,\n      box-shadow 0.1s ease-in-out 0s, background-color 0.25s ease-in-out 0s,\n      color 0.25s ease-in-out 0s;\n  }\n  &:active {\n    background-color: #650d14;\n    transition: border-color 0.25s ease-in-out 0s,\n      box-shadow 0.1s ease-in-out 0s, background-color 0.25s ease-in-out 0s,\n      color 0.25s ease-in-out 0s;\n  }\n  &:focus {\n    box-shadow: rgb(204 51 64 / 35%) 0px 0px 0px 3px;\n  }\n`;\n\nconst StyledBody = styled.body`\n  text-align: center;\n  font-size: 40px;\n`;\n\nconst StyledFooter = styled(Footer)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Modal = () => {\n  const gameState = useSelector(selectCurrentGameState);\n  const text = gameState === \"won\" ? \"You won!\" : \"You lost!\";\n  const dispatch = useDispatch();\n\n  const restartGame = () => {\n    dispatch(restartGameAction());\n  };\n\n  return (\n    <Row>\n      <Col textAlign=\"center\">\n        <ZendeskModal>\n          <StyledBody>{text}</StyledBody>\n          <StyledFooter>\n            <FooterItem>\n              <RestartButton onClick={restartGame}>Try Again</RestartButton>\n            </FooterItem>\n          </StyledFooter>\n        </ZendeskModal>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Board from \"./Board\";\nimport Modal from \"./Modal\";\nimport { selectCurrentGameState, selectGrid } from \"../reducers/selectors\";\n\nconst Game = React.memo(({ restartGame }) => {\n  const grid = useSelector(selectGrid);\n  const gameState = useSelector(selectCurrentGameState);\n  const shouldShowModal = gameState === \"won\" || gameState === \"lost\";\n\n  return (\n    <div>\n      {shouldShowModal && (\n        <Modal restartGame={restartGame}>\n          {gameState === \"won\" ? \"You won!\" : \"You lost!\"}\n        </Modal>\n      )}\n      <Board grid={grid} />\n    </div>\n  );\n});\n\nexport default Game;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div {\n    // margin: 0;\n    padding: 0;\n  }\n\n  html {\n    min-height: 100vh;\n  }\n\n  body {\n    background: ${({ theme }) => theme.gradient};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.20s linear;\n    font-family:  \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  }\n`;\n\nexport default GlobalStyle;\n","export const lightTheme = {\n  body: \"#4158D0\",\n  // gradient: \"linear-gradient(#c2e59c, #64b3f4)\",\n  gradient: \"linear-gradient(#dae2f8, #d6a4a4)\",\n  // gradient: \"linear-gradient(#f8cdda, #1d2b6a)\",\n\n  h1: \"purple\",\n  text: \"#363537\",\n  toggleBorder: \"#FFF\",\n  color: \"#6B9080\",\n  // tiles: {\n  //   0: \"white\",\n  //   2: \"#DAE2F8\",\n  //   4: \"#D6A4A4\",\n  //   8: \"#DADCF0\",\n  //   16: \"#D6AAAC\",\n  //   32: \"#D9D7E9\",\n  //   64: \"#D7AFB3\",\n  //   128: \"#D8C6D2\",\n  //   256: \"#D7B5BB\",\n  //   512: \"#D8C0CA\",\n  //   1024: \"#D7BBC3\",\n  //   2048: \"#F8EDEB\",\n  // },\n  tiles: {\n    0: \"white\",\n    2: \"#B0A3E1\",\n    4: \"#7189FF\",\n    8: \"#BCDCF0\",\n    16: \"#C9C4E8\",\n    32: \"#C2FFFC\",\n    64: \"#DEBEEF\",\n    128: \"#9BB1FF\",\n    256: \"#BFD7FF\",\n    512: \"#FCD5CE\",\n    1024: \"#DADCF0\",\n    2048: \"#FDE6F0\",\n  },\n};\nexport const darkTheme = {\n  // body: \"#363537\",\n  gradient: \"linear-gradient(#232526, #66697D)\",\n\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#purple\",\n  tiles: {\n    0: \"#232526\",\n    2: \"#5C4D7D\",\n    4: \"#B7094C\",\n    8: \"#892B64\",\n    16: \"#006D77\",\n    32: \"#455E89\",\n    64: \"#1780A1\",\n    128: \"#006466\",\n    256: \"#144552\",\n    512: \"#4D194D\",\n    1024: \"#3E1F47\",\n    2048: \"#272640\",\n  },\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n`;\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 42px;\n  height: 26px;\n  border-radius: 15px;\n  background: #bebebe;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    margin: 3px;\n    background: #ffffff;\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n    transition: 0.2s;\n  }\n\n  &:hover {\n    background-color: red;\n    transition: border-color 0.25s ease-in-out 0s,\n      box-shadow 0.1s ease-in-out 0s, background-color 0.25s ease-in-out 0s,\n      color 0.25s ease-in-out 0s;\n  }\n`;\nconst CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 42px;\n  height: 26px;\n  &:checked + ${CheckBoxLabel} {\n    background: #4fbe79;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin-left: 21px;\n      transition: 0.2s;\n    }\n  }\n`;\n\nconst Toggle = ({ onChange }) => {\n  return (\n    <div>\n      <CheckBoxWrapper>\n        <CheckBox id=\"checkbox\" type=\"checkbox\" onChange={onChange} />\n        <CheckBoxLabel htmlFor=\"checkbox\" />\n      </CheckBoxWrapper>\n    </div>\n  );\n};\n\nexport default Toggle;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport Game from \"./Game\";\nimport GlobalStyle from \"../GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./Themes\";\nimport { restartGame as restartGameAction } from \"../actions/boardActions\";\nimport { selectPoints } from \"../reducers/selectors\";\nimport Toggle from \"./Toggle\";\n\nconst AboveGame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: -50px;\n  max-width: 400px;\n  height: 100%;\n`;\n\nconst BodyDiv = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  background-repeat: repeat-x;\n  background-attachment: fixed;\n`;\n\nconst Container = styled.div``;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n`;\n\nconst RestartButton = styled.button`\n  background-color: rgb(204, 51, 64);\n  text-decoration: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-sizing: border-box;\n  font-weight: bolder;\n  color: white;\n  height: 40px;\n  outline: none;\n  box-shadow: none;\n\n  &:hover {\n    background-color: #8c232c;\n    transition: border-color 0.25s ease-in-out 0s,\n      box-shadow 0.1s ease-in-out 0s, background-color 0.25s ease-in-out 0s,\n      color 0.25s ease-in-out 0s;\n  }\n  &:active {\n    background-color: #650d14;\n    transition: border-color 0.25s ease-in-out 0s,\n      box-shadow 0.1s ease-in-out 0s, background-color 0.25s ease-in-out 0s,\n      color 0.25s ease-in-out 0s;\n  }\n  &:focus {\n    box-shadow: rgb(204 51 64 / 35%) 0px 0px 0px 3px;\n  }\n`;\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border: 2px solid grey;\n  position: relative;\n  float: right;\n  padding: 5px;\n  border-radius: 3px;\n  height: 80px;\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.06);\n`;\n\nconst StyledGame = styled(Game)`\n  background-color: red;\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.06);\n`;\n\nconst StyledH1 = styled.h1`\n  font-family: Helvetica;\n  text-align: center;\n  font-size: 125px;\n`;\n\nconst StyledH3 = styled.h3`\n  font-size: 20px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledH4 = styled.h4`\n  font-size: 15px;\n  margin: 0;\n`;\n\nconst TextDiv = styled.div``;\n\nconst TitleContainer = styled.div`\n  display: flex;\n`;\n\nconst ToggleDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst UnderGame = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 400px;\n`;\n\nconst App = React.memo(() => {\n  const score = useSelector(selectPoints);\n  const dispatch = useDispatch();\n  const [theme, setTheme] = useState(\"light\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  const restartGame = () => {\n    dispatch(restartGameAction());\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <BodyDiv>\n        <Container>\n          <GlobalStyle />\n          <TextDiv>\n            <HeaderDiv>\n              <TitleContainer>\n                <StyledH1>2048</StyledH1>\n              </TitleContainer>\n              <ScoreContainer>\n                <StyledH3>SCORE</StyledH3>\n                <StyledH4>{score}</StyledH4>\n              </ScoreContainer>\n            </HeaderDiv>\n            <AboveGame>\n              <p>\n                Join the numbers and get to the <strong>2048 tile!</strong>\n              </p>\n              <ToggleDiv>\n                <Toggle onChange={themeToggler}>Switch Theme</Toggle>\n              </ToggleDiv>\n            </AboveGame>\n          </TextDiv>\n          <StyledGame restartGame={restartGame} />\n          <UnderGame>\n            <RestartButton type=\"submit\" onClick={restartGame}>\n              New Game\n            </RestartButton>\n          </UnderGame>\n        </Container>\n      </BodyDiv>\n    </ThemeProvider>\n  );\n});\n\nexport default App;\n","import {\n  ADD_TILE,\n  MOVE_DOWN,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_UP,\n  RESTART_GAME,\n} from \"../actions/boardActions\";\nimport isEqual from \"lodash/isEqual\";\n\nlet id = 1;\n\nconst randomNumber = () => {\n  return Math.random() < 0.9 ? 2 : 4;\n};\n\nconst generateNewBoard = () => {\n  const newBoard = [];\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n    for (let j = 0; j < 4; j++) {\n      const tile = {\n        value: 0,\n        id: id++,\n      };\n\n      row.push(tile);\n    }\n    newBoard.push(row);\n  }\n\n  const generateRandomCoordinate = () => {\n    return [Math.floor(Math.random() * 4), Math.floor(Math.random() * 4)];\n  };\n\n  const coordinateOne = generateRandomCoordinate();\n  let coordinateTwo = generateRandomCoordinate();\n\n  while (\n    coordinateTwo[0] === coordinateOne[0] &&\n    coordinateTwo[1] === coordinateOne[1]\n  ) {\n    coordinateTwo = generateRandomCoordinate();\n  }\n\n  const randomCoordinates = [coordinateOne, coordinateTwo];\n\n  randomCoordinates.forEach((coordinate) => {\n    const number = randomNumber();\n    const [i, j] = coordinate;\n    const oldTile = newBoard[i][j];\n\n    newBoard[i][j] = {\n      value: number,\n      id: oldTile.id,\n    };\n  });\n  return newBoard;\n};\n// const bugBoard = generateGrid([\n//   [0, 0, 0, 0],\n//   [0, 0, 0, 0],\n//   [0, 8, 0, 0],\n//   [8, 16, 0, 16],\n// ]);\n\nconst initialState = {\n  grid: generateNewBoard(),\n  score: 0,\n  bestScore: null,\n};\n\nconst tiltGridDown = (grid) => {\n  const nextGrid = [];\n\n  grid.forEach((row) => {\n    const nextRow = [...row];\n    nextGrid.push(nextRow);\n  });\n\n  let n = 0;\n  let points = 0;\n\n  while (n < nextGrid.length) {\n    let i = nextGrid.length - 2;\n    let j = nextGrid.length - 1;\n    while (i >= 0) {\n      if (nextGrid[i][n].value === 0 && nextGrid[j][n].value === 0) {\n        i--;\n      } else if (nextGrid[j][n].value === 0) {\n        const oldTile = nextGrid[j][n];\n\n        nextGrid[j][n] = {\n          value: nextGrid[i][n].value + nextGrid[j][n].value,\n          id: nextGrid[i][n].id,\n        };\n\n        nextGrid[i][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n\n        i--;\n      } else if (nextGrid[i][n].value === 0) {\n        i--;\n      } else if (nextGrid[i][n].value === nextGrid[j][n].value) {\n        const oldTile = nextGrid[j][n];\n        nextGrid[j][n] = {\n          value: nextGrid[i][n].value + nextGrid[j][n].value,\n          id: nextGrid[i][n].id,\n        };\n\n        nextGrid[i][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n        points += nextGrid[j][n].value;\n        i--;\n        j--;\n      } else if (\n        nextGrid[i][n].value !== 0 &&\n        nextGrid[j][n].value !== 0 &&\n        j - i !== 1\n      ) {\n        j--;\n        const oldTile = nextGrid[j][n];\n\n        nextGrid[j][n] = nextGrid[i][n];\n        nextGrid[i][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n        i--;\n      } else if (\n        nextGrid[i][n].value !== 0 &&\n        nextGrid[j][n].value !== 0 &&\n        j - i === 1\n      ) {\n        i--;\n        j--;\n      } else {\n        j--;\n      }\n    }\n    n++;\n  }\n\n  nextGrid.forEach((row, i) => {\n    const oldRow = grid[i];\n    if (isEqual(oldRow, row)) {\n      nextGrid[i] = oldRow;\n    }\n  });\n\n  return {\n    grid: nextGrid,\n    points,\n  };\n};\n\nconst tiltGridUp = (grid) => {\n  const nextGrid = [];\n\n  grid.forEach((row) => {\n    const nextRow = [...row];\n    nextGrid.push(nextRow);\n  });\n\n  let n = 0;\n  let points = 0;\n\n  while (n < nextGrid.length) {\n    let i = 0;\n    let j = 1;\n    while (j < nextGrid.length) {\n      if (nextGrid[i][n].value === 0 && nextGrid[j][n].value === 0) {\n        j++;\n      } else if (nextGrid[i][n].value === 0) {\n        const oldTile = nextGrid[i][n];\n        nextGrid[i][n] = nextGrid[j][n];\n\n        nextGrid[j][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n        j++;\n      } else if (nextGrid[j][n].value === 0) {\n        j++;\n      } else if (nextGrid[i][n].value === nextGrid[j][n].value) {\n        const oldTile = nextGrid[i][n];\n\n        nextGrid[i][n] = {\n          value: nextGrid[i][n].value + nextGrid[j][n].value,\n          id: nextGrid[j][n].id,\n        };\n        nextGrid[j][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n        points += nextGrid[i][n].value;\n        i++;\n        j++;\n      } else if (\n        nextGrid[i][n].value !== 0 &&\n        nextGrid[j][n].value !== 0 &&\n        j - i !== 1\n      ) {\n        i++;\n        const oldTile = nextGrid[i][n];\n        nextGrid[i][n] = nextGrid[j][n];\n        nextGrid[j][n] = {\n          value: 0,\n          id: oldTile.id,\n        };\n        j++;\n      } else if (\n        nextGrid[i][n].value !== 0 &&\n        nextGrid[j][n].value !== 0 &&\n        j - i === 1\n      ) {\n        i++;\n        j++;\n      } else {\n        j++;\n      }\n    }\n    n++;\n  }\n  nextGrid.forEach((row, i) => {\n    const oldRow = grid[i];\n    if (isEqual(oldRow, row)) {\n      nextGrid[i] = oldRow;\n    }\n  });\n\n  return {\n    grid: nextGrid,\n    points,\n  };\n};\n\nconst tiltRowLeft = (row) => {\n  const nextRow = [...row];\n  let i = 0;\n  let j = 1;\n  let points = 0;\n\n  let hasSwapped = false;\n  while (j < nextRow.length) {\n    if (nextRow[i].value === nextRow[j].value && nextRow[i].value !== 0) {\n      const oldTile = nextRow[i];\n      nextRow[i] = {\n        value: nextRow[i].value + nextRow[j].value,\n        id: nextRow[j].id,\n      };\n      nextRow[j] = {\n        value: 0,\n        id: oldTile.id,\n      };\n      points += nextRow[i].value;\n\n      i++;\n      j++;\n      hasSwapped = true;\n    } else if (nextRow[i].value !== 0 && nextRow[j].value !== 0) {\n      i++;\n      let temp = nextRow[j];\n      nextRow[j] = nextRow[i];\n      nextRow[i] = temp;\n      j++;\n      hasSwapped = true;\n    } else if (nextRow[i].value === 0 && nextRow[j].value !== 0) {\n      let temp = nextRow[j];\n      nextRow[j] = nextRow[i];\n      nextRow[i] = temp;\n      j++;\n      hasSwapped = true;\n    } else {\n      j++;\n    }\n  }\n\n  return {\n    nextRow: !hasSwapped ? row : nextRow,\n    points,\n  };\n};\n\nconst tiltRowRight = (row) => {\n  const nextRow = [...row];\n  let i = row.length - 2;\n  let j = row.length - 1;\n  let points = 0;\n\n  let hasSwapped = false;\n  while (i >= 0) {\n    if (nextRow[i].value === nextRow[j].value && nextRow[i].value !== 0) {\n      const oldTile = nextRow[j];\n      nextRow[j] = {\n        value: nextRow[i].value + nextRow[j].value,\n        id: nextRow[i].id,\n      };\n\n      nextRow[i] = {\n        value: 0,\n        id: oldTile.id,\n      };\n      points += nextRow[j].value;\n\n      j--;\n      i--;\n      hasSwapped = true;\n    } else if (nextRow[i].value !== 0 && nextRow[j].value !== 0) {\n      j--;\n      let temp = nextRow[j];\n      nextRow[j] = nextRow[i];\n      nextRow[i] = temp;\n      i--;\n      hasSwapped = true;\n    } else if (nextRow[j].value === 0 && nextRow[i].value !== 0) {\n      const oldTile = nextRow[j];\n      nextRow[j] = nextRow[i];\n\n      nextRow[i] = {\n        value: 0,\n        id: oldTile.id,\n      };\n      i--;\n      hasSwapped = true;\n    } else {\n      i--;\n    }\n  }\n\n  return {\n    nextRow: !hasSwapped ? row : nextRow,\n    points,\n  };\n};\n\nconst boardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RESTART_GAME: {\n      return {\n        grid: generateNewBoard(),\n        score: 0,\n        bestScore: null,\n      };\n    }\n    case MOVE_DOWN: {\n      const { grid, points } = tiltGridDown(state.grid);\n\n      return {\n        ...state,\n        grid: grid,\n        score: state.score + points,\n      };\n    }\n    case MOVE_LEFT: {\n      const nextGrid = [...state.grid];\n      let newPoints = 0;\n      nextGrid.forEach((row, index) => {\n        const { nextRow, points } = tiltRowLeft(row);\n        nextGrid[index] = nextRow;\n        newPoints += points;\n      });\n\n      return {\n        ...state,\n        grid: nextGrid,\n        score: state.score + newPoints,\n      };\n    }\n    case MOVE_RIGHT: {\n      const nextGrid = [...state.grid];\n      let newPoints = 0;\n      nextGrid.forEach((row, index) => {\n        const { nextRow, points } = tiltRowRight(row);\n        nextGrid[index] = nextRow;\n        newPoints += points;\n      });\n\n      return {\n        ...state,\n        grid: nextGrid,\n        score: state.score + newPoints,\n      };\n    }\n\n    case MOVE_UP: {\n      const { grid, points } = tiltGridUp(state.grid);\n\n      if (isEqual(state.grid, grid)) {\n        return state;\n      }\n\n      return {\n        ...state,\n        grid: grid,\n        score: state.score + points,\n      };\n    }\n\n    case ADD_TILE: {\n      const emptyCoordinates = [];\n\n      state.grid.forEach((row, i) => {\n        row.forEach((item, j) => {\n          if (item.value === 0) {\n            emptyCoordinates.push([i, j]);\n          }\n        });\n      });\n\n      if (emptyCoordinates.length === 0) {\n        return state;\n      }\n\n      const randomEmptyCoordinateIndex = Math.floor(\n        Math.random() * emptyCoordinates.length\n      );\n      const randomEmptyCoordinate =\n        emptyCoordinates[randomEmptyCoordinateIndex];\n\n      const number = randomNumber();\n\n      const [i, j] = randomEmptyCoordinate;\n      const previousTile = state.grid[i][j];\n\n      const tileObject = {\n        value: number,\n        id: previousTile.id,\n      };\n\n      const nextGrid = state.grid.reduce((acc, row, i) => {\n        if (i === randomEmptyCoordinate[0]) {\n          const newRow = row.reduce((acc, tile, j) => {\n            if (j === randomEmptyCoordinate[1]) {\n              acc.push(tileObject);\n            } else {\n              acc.push(tile);\n            }\n            return acc;\n          }, []);\n          acc.push(newRow);\n        } else {\n          acc.push(row);\n        }\n        return acc;\n      }, []);\n      return {\n        ...state,\n        grid: nextGrid,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","import { combineReducers } from \"redux\";\n\nimport boardReducer from \"./boardReducer\";\n\nconst rootReducer = combineReducers({ board: boardReducer });\n\nexport default rootReducer;\n","import { createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nimport rootReducer from \"../reducers/rootReducer\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst enhancers = [\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n];\n\nconst composeEnhancer = compose(...enhancers);\n\nconst store = createStore(persistedReducer, composeEnhancer);\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport { moveLeft } from \"./actions/boardActions\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store, { persistor } from \"./components/store\";\nimport { ThemeProvider, DEFAULT_THEME } from \"@zendeskgarden/react-theming\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  window.moveLeft = moveLeft;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <ThemeProvider theme={DEFAULT_THEME}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </ThemeProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}